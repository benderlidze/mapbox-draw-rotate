!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t=t||self).ScaleRotateMode={})}(this,(function(t){"use strict";const e={FEATURE:"Feature",POLYGON:"Polygon",LINE_STRING:"LineString",POINT:"Point",FEATURE_COLLECTION:"FeatureCollection",MULTI_PREFIX:"Multi",MULTI_POINT:"MultiPoint",MULTI_LINE_STRING:"MultiLineString",MULTI_POLYGON:"MultiPolygon"},r={DRAW_LINE_STRING:"draw_line_string",DRAW_POLYGON:"draw_polygon",DRAW_POINT:"draw_point",SIMPLE_SELECT:"simple_select",DIRECT_SELECT:"direct_select",STATIC:"static"},o={CREATE:"draw.create",DELETE:"draw.delete",UPDATE:"draw.update",SELECTION_CHANGE:"draw.selectionchange",MODE_CHANGE:"draw.modechange",ACTIONABLE:"draw.actionable",RENDER:"draw.render",COMBINE_FEATURES:"draw.combine",UNCOMBINE_FEATURES:"draw.uncombine"},n={MOVE:"move",CHANGE_COORDINATES:"change_coordinates"},i={FEATURE:"feature",MIDPOINT:"midpoint",VERTEX:"vertex"},a={ACTIVE:"true",INACTIVE:"false"};var c=Object.freeze({__proto__:null,classes:{CONTROL_BASE:"mapboxgl-ctrl",CONTROL_PREFIX:"mapboxgl-ctrl-",CONTROL_BUTTON:"mapbox-gl-draw_ctrl-draw-btn",CONTROL_BUTTON_LINE:"mapbox-gl-draw_line",CONTROL_BUTTON_POLYGON:"mapbox-gl-draw_polygon",CONTROL_BUTTON_POINT:"mapbox-gl-draw_point",CONTROL_BUTTON_TRASH:"mapbox-gl-draw_trash",CONTROL_BUTTON_COMBINE_FEATURES:"mapbox-gl-draw_combine",CONTROL_BUTTON_UNCOMBINE_FEATURES:"mapbox-gl-draw_uncombine",CONTROL_GROUP:"mapboxgl-ctrl-group",ATTRIBUTION:"mapboxgl-ctrl-attrib",ACTIVE_BUTTON:"active",BOX_SELECT:"mapbox-gl-draw_boxselect"},sources:{HOT:"mapbox-gl-draw-hot",COLD:"mapbox-gl-draw-cold"},cursors:{ADD:"add",MOVE:"move",DRAG:"drag",POINTER:"pointer",NONE:"none"},types:{POLYGON:"polygon",LINE:"line_string",POINT:"point"},geojsonTypes:e,modes:r,events:o,updateActions:n,meta:i,activeStates:a,interactions:["scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","touchZoomRotate"],LAT_MIN:-90,LAT_RENDERED_MIN:-85,LAT_MAX:90,LAT_RENDERED_MAX:85,LNG_MIN:-270,LNG_MAX:270}),l={enable(t){setTimeout((()=>{t.map&&t.map.doubleClickZoom&&t._ctx&&t._ctx.store&&t._ctx.store.getInitialConfigValue&&t._ctx.store.getInitialConfigValue("doubleClickZoom")&&t.map.doubleClickZoom.enable()}),0)},disable(t){setTimeout((()=>{t.map&&t.map.doubleClickZoom&&t.map.doubleClickZoom.disable()}),0)}};function s(t,r,o,n){return{type:e.FEATURE,properties:{meta:i.VERTEX,parent:t,coord_path:o,active:n?a.ACTIVE:a.INACTIVE},geometry:{type:e.POINT,coordinates:r}}}function u(t,r={},o=null){const{type:n,coordinates:a}=t.geometry,c=t.properties&&t.properties.id;let l=[];function f(t,o){let n="",a=null;t.forEach(((t,u)=>{const f=null!=o?`${o}.${u}`:String(u),d=s(c,t,f,p(f));if(r.midpoints&&a){const t=function(t,r,o,n){const a=r.geometry.coordinates,c=o.geometry.coordinates;if(a[1]>85||a[1]<-85||c[1]>85||c[1]<-85)return null;const l=n.project([a[0],a[1]]),s=n.project([c[0],c[1]]),u=n.unproject([(l.x+s.x)/2,(l.y+s.y)/2]);return{type:e.FEATURE,properties:{meta:i.MIDPOINT,parent:t,lng:u.lng,lat:u.lat,coord_path:o.properties.coord_path},geometry:{type:e.POINT,coordinates:[u.lng,u.lat]}}}(c,a,d,r.map);t&&l.push(t)}a=d;const h=JSON.stringify(t);n!==h&&l.push(d),0===u&&(n=h)}))}function p(t){return!!r.selectedPaths&&-1!==r.selectedPaths.indexOf(t)}return n===e.POINT?l.push(s(c,a,o,p(o))):n===e.POLYGON?a.forEach(((t,e)=>{f(t,null!==o?`${o}.${e}`:String(e))})):n===e.LINE_STRING?f(a,o):0===n.indexOf(e.MULTI_PREFIX)&&function(){const o=n.replace(e.MULTI_PREFIX,"");a.forEach(((n,i)=>{const a={type:e.FEATURE,properties:t.properties,geometry:{type:o,coordinates:n}};l=l.concat(u(a,r,i))}))}(),l}function f(t){return function(e){const r=e.featureTarget;return!!r&&(!!r.properties&&r.properties.meta===t)}}function p(t){return!!t.featureTarget&&(!!t.featureTarget.properties&&(t.featureTarget.properties.active===a.ACTIVE&&t.featureTarget.properties.meta===i.FEATURE))}function d(t){return!!t.originalEvent&&!0===t.originalEvent.shiftKey}var h=function(t){if(!t||!t.type)return null;var e=g[t.type];if(!e)return null;if("geometry"===e)return{type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:t}]};if("feature"===e)return{type:"FeatureCollection",features:[t]};if("featurecollection"===e)return t},g={Point:"geometry",MultiPoint:"geometry",LineString:"geometry",MultiLineString:"geometry",Polygon:"geometry",MultiPolygon:"geometry",GeometryCollection:"geometry",Feature:"feature",FeatureCollection:"featurecollection"};var y=function t(e){switch(e&&e.type||null){case"FeatureCollection":return e.features=e.features.reduce((function(e,r){return e.concat(t(r))}),[]),e;case"Feature":return e.geometry?t(e.geometry).map((function(t){var r={type:"Feature",properties:JSON.parse(JSON.stringify(e.properties)),geometry:t};return void 0!==e.id&&(r.id=e.id),r})):e;case"MultiPoint":return e.coordinates.map((function(t){return{type:"Point",coordinates:t}}));case"MultiPolygon":return e.coordinates.map((function(t){return{type:"Polygon",coordinates:t}}));case"MultiLineString":return e.coordinates.map((function(t){return{type:"LineString",coordinates:t}}));case"GeometryCollection":return e.geometries.map(t).reduce((function(t,e){return t.concat(e)}),[]);case"Point":case"Polygon":case"LineString":return[e]}},b=function(t){if(!t)return[];var e=y(h(t)),r=[];return e.features.forEach((function(t){t.geometry&&(r=r.concat(function t(e){return Array.isArray(e)&&e.length&&"number"==typeof e[0]?[e]:e.reduce((function(e,r){return Array.isArray(r)&&Array.isArray(r[0])?e.concat(t(r)):(e.push(r),e)}),[])}(t.geometry.coordinates)))})),r};function m(t){return Object.prototype.toString.call(t)}var v=Array.isArray||function(t){return"[object Array]"===Object.prototype.toString.call(t)};function w(t,e){if(t.forEach)return t.forEach(e);for(var r=0;r<t.length;r++)e(t[r],r,t)}var E=Object.keys||function(t){var e=[];for(var r in t)e.push(r);return e},_=Object.prototype.hasOwnProperty||function(t,e){return e in t};function M(t){if("object"==typeof t&&null!==t){var e;if(v(t))e=[];else if("[object Date]"===m(t))e=new Date(t.getTime?t.getTime():t);else if(function(t){return"[object RegExp]"===m(t)}(t))e=new RegExp(t);else if(function(t){return"[object Error]"===m(t)}(t))e={message:t.message};else if(function(t){return"[object Boolean]"===m(t)}(t)||function(t){return"[object Number]"===m(t)}(t)||function(t){return"[object String]"===m(t)}(t))e=Object(t);else if(Object.create&&Object.getPrototypeOf)e=Object.create(Object.getPrototypeOf(t));else if(t.constructor===Object)e={};else{var r=t.constructor&&t.constructor.prototype||t.__proto__||{},o=function(){};o.prototype=r,e=new o}return w(E(t),(function(r){e[r]=t[r]})),e}return t}function P(t,e,r){var o=[],n=[],i=!0;return function t(a){var c=r?M(a):a,l={},s=!0,u={node:c,node_:a,path:[].concat(o),parent:n[n.length-1],parents:n,key:o[o.length-1],isRoot:0===o.length,level:o.length,circular:null,update:function(t,e){u.isRoot||(u.parent.node[u.key]=t),u.node=t,e&&(s=!1)},delete:function(t){delete u.parent.node[u.key],t&&(s=!1)},remove:function(t){v(u.parent.node)?u.parent.node.splice(u.key,1):delete u.parent.node[u.key],t&&(s=!1)},keys:null,before:function(t){l.before=t},after:function(t){l.after=t},pre:function(t){l.pre=t},post:function(t){l.post=t},stop:function(){i=!1},block:function(){s=!1}};if(!i)return u;function f(){if("object"==typeof u.node&&null!==u.node){u.keys&&u.node_===u.node||(u.keys=E(u.node)),u.isLeaf=0===u.keys.length;for(var t=0;t<n.length;t++)if(n[t].node_===a){u.circular=n[t];break}}else u.isLeaf=!0,u.keys=null;u.notLeaf=!u.isLeaf,u.notRoot=!u.isRoot}f();var p=e.call(u,u.node);return void 0!==p&&u.update&&u.update(p),l.before&&l.before.call(u,u.node),s?("object"!=typeof u.node||null===u.node||u.circular||(n.push(u),f(),w(u.keys,(function(e,n){o.push(e),l.pre&&l.pre.call(u,u.node[e],e);var i=t(u.node[e]);r&&_.call(u.node,e)&&(u.node[e]=i.node),i.isLast=n===u.keys.length-1,i.isFirst=0===n,l.post&&l.post.call(u,i),o.pop()})),n.pop()),l.after&&l.after.call(u,u.node),u):u}(t).node}function T(t){this.value=t}function I(t){return new T(t)}T.prototype.get=function(t){for(var e=this.value,r=0;r<t.length;r++){var o=t[r];if(!e||!_.call(e,o))return;e=e[o]}return e},T.prototype.has=function(t){for(var e=this.value,r=0;r<t.length;r++){var o=t[r];if(!e||!_.call(e,o))return!1;e=e[o]}return!0},T.prototype.set=function(t,e){for(var r=this.value,o=0;o<t.length-1;o++){var n=t[o];_.call(r,n)||(r[n]={}),r=r[n]}return r[t[o]]=e,e},T.prototype.map=function(t){return P(this.value,t,!0)},T.prototype.forEach=function(t){return this.value=P(this.value,t,!1),this.value},T.prototype.reduce=function(t,e){var r=1===arguments.length,o=r?this.value:e;return this.forEach((function(e){this.isRoot&&r||(o=t.call(this,o,e))})),o},T.prototype.paths=function(){var t=[];return this.forEach((function(){t.push(this.path)})),t},T.prototype.nodes=function(){var t=[];return this.forEach((function(){t.push(this.node)})),t},T.prototype.clone=function(){var t=[],e=[];return function r(o){for(var n=0;n<t.length;n++)if(t[n]===o)return e[n];if("object"==typeof o&&null!==o){var i=M(o);return t.push(o),e.push(i),w(E(o),(function(t){i[t]=r(o[t])})),t.pop(),e.pop(),i}return o}(this.value)},w(E(T.prototype),(function(t){I[t]=function(e){var r=[].slice.call(arguments,1),o=new T(e);return o[t].apply(o,r)}}));var O=I,x=N;function N(t){if(!(this instanceof N))return new N(t);this._bbox=t||[1/0,1/0,-1/0,-1/0],this._valid=!!t}N.prototype.include=function(t){return this._valid=!0,this._bbox[0]=Math.min(this._bbox[0],t[0]),this._bbox[1]=Math.min(this._bbox[1],t[1]),this._bbox[2]=Math.max(this._bbox[2],t[0]),this._bbox[3]=Math.max(this._bbox[3],t[1]),this},N.prototype.equals=function(t){var e;return e=t instanceof N?t.bbox():t,this._bbox[0]==e[0]&&this._bbox[1]==e[1]&&this._bbox[2]==e[2]&&this._bbox[3]==e[3]},N.prototype.center=function(t){return this._valid?[(this._bbox[0]+this._bbox[2])/2,(this._bbox[1]+this._bbox[3])/2]:null},N.prototype.union=function(t){var e;return this._valid=!0,e=t instanceof N?t.bbox():t,this._bbox[0]=Math.min(this._bbox[0],e[0]),this._bbox[1]=Math.min(this._bbox[1],e[1]),this._bbox[2]=Math.max(this._bbox[2],e[2]),this._bbox[3]=Math.max(this._bbox[3],e[3]),this},N.prototype.bbox=function(){return this._valid?this._bbox:null},N.prototype.contains=function(t){if(!t)return this._fastContains();if(!this._valid)return null;var e=t[0],r=t[1];return this._bbox[0]<=e&&this._bbox[1]<=r&&this._bbox[2]>=e&&this._bbox[3]>=r},N.prototype.intersect=function(t){return this._valid?(e=t instanceof N?t.bbox():t,!(this._bbox[0]>e[2]||this._bbox[2]<e[0]||this._bbox[3]<e[1]||this._bbox[1]>e[3])):null;var e},N.prototype._fastContains=function(){if(!this._valid)return new Function("return null;");var t="return "+this._bbox[0]+"<= ll[0] &&"+this._bbox[1]+"<= ll[1] &&"+this._bbox[2]+">= ll[0] &&"+this._bbox[3]+">= ll[1]";return new Function("ll",t)},N.prototype.polygon=function(){return this._valid?{type:"Polygon",coordinates:[[[this._bbox[0],this._bbox[1]],[this._bbox[2],this._bbox[1]],[this._bbox[2],this._bbox[3]],[this._bbox[0],this._bbox[3]],[this._bbox[0],this._bbox[1]]]]}:null};var L={features:["FeatureCollection"],coordinates:["Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"],geometry:["Feature"],geometries:["GeometryCollection"]},R=Object.keys(L),C=function(t){return S(t).bbox()};function S(t){for(var e=x(),r=b(t),o=0;o<r.length;o++)e.include(r[o]);return e}C.polygon=function(t){return S(t).polygon()},C.bboxify=function(t){return O(t).map((function(t){t&&(R.some((function(e){return!!t[e]&&-1!==L[e].indexOf(t.type)}))&&(t.bbox=S(t).bbox(),this.update(t)))}))};const{LAT_MIN:A,LAT_MAX:F,LAT_RENDERED_MIN:j,LAT_RENDERED_MAX:U,LNG_MIN:k,LNG_MAX:D}=c;function G(t,r){const o=function(t,e){let r=A,o=F,n=A,i=F,a=D,c=k;t.forEach((t=>{const e=C(t),l=e[1],s=e[3],u=e[0],f=e[2];l>r&&(r=l),s<o&&(o=s),s>n&&(n=s),l<i&&(i=l),u<a&&(a=u),f>c&&(c=f)}));const l=e;return r+l.lat>U&&(l.lat=U-r),n+l.lat>F&&(l.lat=F-n),o+l.lat<j&&(l.lat=j-o),i+l.lat<A&&(l.lat=A-i),a+l.lng<=k&&(l.lng+=360*Math.ceil(Math.abs(l.lng)/360)),c+l.lng>=D&&(l.lng-=360*Math.ceil(Math.abs(l.lng)/360)),l}(t.map((t=>t.toGeoJSON())),r);t.forEach((t=>{const r=t.getCoordinates(),n=t=>{const e={lng:t[0]+o.lng,lat:t[1]+o.lat};return[e.lng,e.lat]},i=t=>t.map((t=>n(t))),a=t=>t.map((t=>i(t)));let c;t.type===e.POINT?c=n(r):t.type===e.LINE_STRING||t.type===e.MULTI_POINT?c=r.map(n):t.type===e.POLYGON||t.type===e.MULTI_LINE_STRING?c=r.map(i):t.type===e.MULTI_POLYGON&&(c=r.map(a)),t.incomingCoords(c)}))}var q=6371008.8,$={meters:q,metres:q,millimeters:6371008800,millimetres:6371008800,centimeters:637100880,centimetres:637100880,kilometers:6371.0088,kilometres:6371.0088,miles:3958.761333810546,nauticalmiles:q/1852,inches:39.37*q,yards:5825721.287490856,feet:20902260.511392,radians:1,degrees:57.22891354143274};function B(t,e,r){if(!K(r=r||{}))throw new Error("options is invalid");var o=r.bbox,n=r.id;if(void 0===t)throw new Error("geometry is required");if(e&&e.constructor!==Object)throw new Error("properties must be an Object");o&&function(t){if(!t)throw new Error("bbox is required");if(!Array.isArray(t))throw new Error("bbox must be an Array");if(4!==t.length&&6!==t.length)throw new Error("bbox must be an Array of 4 or 6 numbers");t.forEach((function(t){if(!z(t))throw new Error("bbox must only contain numbers")}))}(o),n&&function(t){if(!t)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof t))throw new Error("id must be a number or a string")}(n);var i={type:"Feature"};return n&&(i.id=n),o&&(i.bbox=o),i.properties=e||{},i.geometry=t,i}function V(t,e,r){if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");if(t.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!z(t[0])||!z(t[1]))throw new Error("coordinates must contain numbers");return B({type:"Point",coordinates:t},e,r)}function X(t,e,r){if(!t)throw new Error("coordinates is required");if(t.length<2)throw new Error("coordinates must be an array of two or more positions");if(!z(t[0][1])||!z(t[0][1]))throw new Error("coordinates must contain numbers");return B({type:"LineString",coordinates:t},e,r)}function Y(t,e){if(null==t)throw new Error("radians is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var r=$[e||"kilometers"];if(!r)throw new Error(e+" units is invalid");return t*r}function J(t,e){if(null==t)throw new Error("distance is required");if(e&&"string"!=typeof e)throw new Error("units must be a string");var r=$[e||"kilometers"];if(!r)throw new Error(e+" units is invalid");return t/r}function Z(t){if(null==t)throw new Error("radians is required");return 180*(t%(2*Math.PI))/Math.PI}function H(t){if(null==t)throw new Error("degrees is required");return t%360*Math.PI/180}function W(t,e,r){if(null==t)throw new Error("length is required");if(!(t>=0))throw new Error("length must be a positive number");return Y(J(t,e),r||"kilometers")}function z(t){return!isNaN(t)&&null!==t&&!Array.isArray(t)}function K(t){return!!t&&t.constructor===Object}function Q(t){if(!t)throw new Error("obj is required");var e=tt(t);if(e.length>1&&z(e[0])&&z(e[1]))return e;throw new Error("Coordinate is not a valid Point")}function tt(t){if(!t)throw new Error("obj is required");var e;if(t.length?e=t:t.coordinates?e=t.coordinates:t.geometry&&t.geometry.coordinates&&(e=t.geometry.coordinates),e)return et(e),e;throw new Error("No valid coordinates")}function et(t){if(t.length>1&&z(t[0])&&z(t[1]))return!0;if(Array.isArray(t[0])&&t[0].length)return et(t[0]);throw new Error("coordinates must only contain numbers")}function rt(t,e,r){if(!K(r=r||{}))throw new Error("options is invalid");if(!0===r.final)return function(t,e){var r=rt(e,t);return r=(r+180)%360}(t,e);var o=Q(t),n=Q(e),i=H(o[0]),a=H(n[0]),c=H(o[1]),l=H(n[1]),s=Math.sin(a-i)*Math.cos(l),u=Math.cos(c)*Math.sin(l)-Math.sin(c)*Math.cos(l)*Math.cos(a-i);return Z(Math.atan2(s,u))}function ot(t,e,r){if(null!==t)for(var o,n,i,a,c,l,s,u,f=0,p=0,d=t.type,h="FeatureCollection"===d,g="Feature"===d,y=h?t.features.length:1,b=0;b<y;b++){c=(u=!!(s=h?t.features[b].geometry:g?t.geometry:t)&&"GeometryCollection"===s.type)?s.geometries.length:1;for(var m=0;m<c;m++){var v=0,w=0;if(null!==(a=u?s.geometries[m]:s)){l=a.coordinates;var E=a.type;switch(f=!r||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":e(l,p,b,v,w),p++,v++;break;case"LineString":case"MultiPoint":for(o=0;o<l.length;o++)e(l[o],p,b,v,w),p++,"MultiPoint"===E&&v++;"LineString"===E&&v++;break;case"Polygon":case"MultiLineString":for(o=0;o<l.length;o++){for(n=0;n<l[o].length-f;n++)e(l[o][n],p,b,v,w),p++;"MultiLineString"===E&&v++,"Polygon"===E&&w++}"Polygon"===E&&v++;break;case"MultiPolygon":for(o=0;o<l.length;o++){for("MultiPolygon"===E&&(w=0),n=0;n<l[o].length;n++){for(i=0;i<l[o][n].length-f;i++)e(l[o][n][i],p,b,v,w),p++;w++}v++}break;case"GeometryCollection":for(o=0;o<a.geometries.length;o++)ot(a.geometries[o],e,r);break;default:throw new Error("Unknown Geometry Type")}}}}}function nt(t){var e=[1/0,1/0,-1/0,-1/0];return ot(t,(function(t){e[0]>t[0]&&(e[0]=t[0]),e[1]>t[1]&&(e[1]=t[1]),e[2]<t[0]&&(e[2]=t[0]),e[3]<t[1]&&(e[3]=t[1])})),e}function it(t,e){if(!K(e=e||{}))throw new Error("options is invalid");var r=e.properties;if(!t)throw new Error("geojson is required");var o=nt(t);return V([(o[0]+o[2])/2,(o[1]+o[3])/2],r)}function at(t,e,r,o){if(!K(o=o||{}))throw new Error("options is invalid");var n=o.units,i=o.properties,a=Q(t),c=H(a[0]),l=H(a[1]),s=H(r),u=J(e,n),f=Math.asin(Math.sin(l)*Math.cos(u)+Math.cos(l)*Math.sin(u)*Math.cos(s));return V([Z(c+Math.atan2(Math.sin(s)*Math.sin(u)*Math.cos(l),Math.cos(u)-Math.sin(l)*Math.sin(f))),Z(f)],i)}function ct(t,e,r){if(!K(r=r||{}))throw new Error("options is invalid");var o=r.units,n=Q(t),i=Q(e),a=H(i[1]-n[1]),c=H(i[0]-n[0]),l=H(n[1]),s=H(i[1]),u=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(c/2),2)*Math.cos(l)*Math.cos(s);return Y(2*Math.atan2(Math.sqrt(u),Math.sqrt(1-u)),o)}function lt(t,e){return at(t,ct(t,e)/2,rt(t,e))}function st(t,e){var r=0,o=0,n=0;return ot(t,(function(t){r+=t[0],o+=t[1],n++}),!0),V([r/n,o/n],e)}function ut(t,e,r){if(!K(r=r||{}))throw new Error("options is invalid");var o,n=r.final;if(!t)throw new Error("start point is required");if(!e)throw new Error("end point is required");return(o=n?ft(Q(e),Q(t)):ft(Q(t),Q(e)))>180?-(360-o):o}function ft(t,e){var r=H(t[1]),o=H(e[1]),n=H(e[0]-t[0]);n>Math.PI&&(n-=2*Math.PI),n<-Math.PI&&(n+=2*Math.PI);var i=Math.log(Math.tan(o/2+Math.PI/4)/Math.tan(r/2+Math.PI/4));return(Z(Math.atan2(n,i))+360)%360}function pt(t,e,r){if(!K(r=r||{}))throw new Error("options is invalid");var o=r.units;if(!t)throw new Error("from point is required");if(!e)throw new Error("to point is required");var n=Q(t),i=Q(e);return i[0]+=i[0]-n[0]>180?-360:n[0]-i[0]>180?360:0,W(function(t,e,r){var o=r=void 0===r?q:Number(r),n=t[1]*Math.PI/180,i=e[1]*Math.PI/180,a=i-n,c=Math.abs(e[0]-t[0])*Math.PI/180;c>Math.PI&&(c-=2*Math.PI);var l=Math.log(Math.tan(i/2+Math.PI/4)/Math.tan(n/2+Math.PI/4)),s=Math.abs(l)>1e-11?a/l:Math.cos(n);return Math.sqrt(a*a+s*s*c*c)*o}(n,i),"meters",o)}function dt(t,e,r,o){if(!K(o=o||{}))throw new Error("options is invalid");var n=o.units,i=o.properties;if(!t)throw new Error("origin is required");if(null==e)throw new Error("distance is required");if(null==r)throw new Error("bearing is required");if(!(e>=0))throw new Error("distance must be greater than 0");var a=W(e,n,"meters"),c=Q(t),l=function(t,e,r,o){o=void 0===o?q:Number(o);var n=e/o,i=t[0]*Math.PI/180,a=H(t[1]),c=H(r),l=n*Math.cos(c),s=a+l;Math.abs(s)>Math.PI/2&&(s=s>0?Math.PI-s:-Math.PI-s);var u=Math.log(Math.tan(s/2+Math.PI/4)/Math.tan(a/2+Math.PI/4)),f=Math.abs(u)>1e-11?l/u:Math.cos(a),p=n*Math.sin(c)/f;return[(180*(i+p)/Math.PI+540)%360-180,180*s/Math.PI]}(c,a,r);return l[0]+=l[0]-c[0]>180?-360:c[0]-l[0]>180?360:0,V(l,i)}function ht(t){if(!t)throw new Error("geojson is required");switch(t.type){case"Feature":return gt(t);case"FeatureCollection":return function(t){var e={type:"FeatureCollection"};return Object.keys(t).forEach((function(r){switch(r){case"type":case"features":return;default:e[r]=t[r]}})),e.features=t.features.map((function(t){return gt(t)})),e}(t);case"Point":case"LineString":case"Polygon":case"MultiPoint":case"MultiLineString":case"MultiPolygon":case"GeometryCollection":return bt(t);default:throw new Error("unknown GeoJSON type")}}function gt(t){var e={type:"Feature"};return Object.keys(t).forEach((function(r){switch(r){case"type":case"properties":case"geometry":return;default:e[r]=t[r]}})),e.properties=yt(t.properties),e.geometry=bt(t.geometry),e}function yt(t){var e={};return t?(Object.keys(t).forEach((function(r){var o=t[r];"object"==typeof o?null===o?e[r]=null:o.length?e[r]=o.map((function(t){return t})):e[r]=yt(o):e[r]=o})),e):e}function bt(t){var e={type:t.type};return t.bbox&&(e.bbox=t.bbox),"GeometryCollection"===t.type?(e.geometries=t.geometries.map((function(t){return bt(t)})),e):(e.coordinates=mt(t.coordinates),e)}function mt(t){return"object"!=typeof t[0]?t.slice():t.map((function(t){return mt(t)}))}function vt(t,e,r){if(!K(r=r||{}))throw new Error("options is invalid");var o=r.origin,n=r.mutate;if(!t)throw new Error("geojson required");if("number"!=typeof e||0===e)throw new Error("invalid factor");var i=Array.isArray(o)||"object"==typeof o;return!0!==n&&(t=ht(t)),"FeatureCollection"!==t.type||i?wt(t,e,o):(function(t,e){if("Feature"===t.type)e(t,0);else if("FeatureCollection"===t.type)for(var r=0;r<t.features.length;r++)e(t.features[r],r)}(t,(function(r,n){t.features[n]=wt(r,e,o)})),t)}function wt(t,e,r){var o="Point"===function(t,e){if(!t)throw new Error((e||"geojson")+" is required");if(t.geometry&&t.geometry.type)return t.geometry.type;if(t.type)return t.type;throw new Error((e||"geojson")+" is invalid")}(t);return r=function(t,e){null==e&&(e="centroid");if(Array.isArray(e)||"object"==typeof e)return Q(e);var r=t.bbox?t.bbox:nt(t),o=r[0],n=r[1],i=r[2],a=r[3];switch(e){case"sw":case"southwest":case"westsouth":case"bottomleft":return V([o,n]);case"se":case"southeast":case"eastsouth":case"bottomright":return V([i,n]);case"nw":case"northwest":case"westnorth":case"topleft":return V([o,a]);case"ne":case"northeast":case"eastnorth":case"topright":return V([i,a]);case"center":return it(t);case void 0:case null:case"centroid":return st(t);default:throw new Error("invalid origin")}}(t,r),1===e||o||ot(t,(function(t){var o=pt(r,t),n=ut(r,t),i=tt(dt(r,o*e,n));t[0]=i[0],t[1]=i[1],3===t.length&&(t[2]*=e)})),t}var Et=new URL("img/rotate.png","undefined"==typeof document?new(require("url").URL)("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("index.js",document.baseURI).href),_t=new URL("img/scale.png","undefined"==typeof document?new(require("url").URL)("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("index.js",document.baseURI).href);const Mt={},Pt={Center:0,Opposite:1};function Tt(t,e=Pt.Center){if(null==t||null==t)return e;if(t===Pt.Center||t===Pt.Opposite)return t;if("center"==t)return Pt.Center;if("opposite"==t)return Pt.Opposite;throw Error("Invalid SRCenter: "+t)}Mt.onSetup=function(t){const r=this.getSelected()[0].id,o=this.getFeature(r);if(!o)throw new Error("You must provide a valid featureId to enter SRMode");if(o.type===e.POINT||o.type===e.MULTI_POINT)throw new TypeError("SRMode can not handle points");const n={featureId:r,feature:o,canTrash:null==t.canTrash||t.canTrash,canScale:null==t.canScale||t.canScale,canRotate:null==t.canRotate||t.canRotate,singleRotationPoint:null!=t.singleRotationPoint&&t.singleRotationPoint,rotationPointRadius:null!=t.rotationPointRadius?t.rotationPointRadius:1,rotatePivot:Tt(t.rotatePivot,Pt.Center),scaleCenter:Tt(t.scaleCenter,Pt.Center),canSelectFeatures:null==t.canSelectFeatures||t.canSelectFeatures,dragMoveLocation:t.startPos||null,dragMoving:!1,canDragMove:!1,selectedCoordPaths:t.coordPath?[t.coordPath]:[]};n.canRotate||n.canScale||console.warn("Non of canScale or canRotate is true"),this.setSelectedCoordinates(this.pathsToCoordinates(r,n.selectedCoordPaths)),this.setSelected(r),l.disable(this),this.setActionableState({combineFeatures:!1,uncombineFeatures:!1,trash:n.canTrash});var i=this;return this.map.loadImage(Et.default,(function(t,e){if(t)throw t;i.map.addImage("rotate",e)})),this.map.loadImage(_t.default,(function(t,e){if(t)throw t;i.map.addImage("scale",e)})),n},Mt.toDisplayFeatures=function(t,e,r){if(t.featureId===e.properties.id){e.properties.active=a.ACTIVE,r(e);var o=u(e,{map:this.map,midpoints:!1,selectedPaths:t.selectedCoordPaths});if(t.canScale&&(this.computeBisectrix(o),o.forEach(r)),t.canRotate)this.createRotationPoints(t,e,o).forEach(r)}else e.properties.active=a.INACTIVE,r(e);this.setActionableState({combineFeatures:!1,uncombineFeatures:!1,trash:t.canTrash})},Mt.onStop=function(){l.enable(this),this.clearSelectedCoordinates()},Mt.pathsToCoordinates=function(t,e){return e.map((e=>({feature_id:t,coord_path:e})))},Mt.computeBisectrix=function(t){for(var e=0;e<t.length;e++){var r=(e-1+t.length)%t.length,o=(e+1)%t.length,n=(X([t[r].geometry.coordinates,t[e].geometry.coordinates]),X([t[e].geometry.coordinates,t[o].geometry.coordinates]),(rt(t[r].geometry.coordinates,t[e].geometry.coordinates)+rt(t[o].geometry.coordinates,t[e].geometry.coordinates))/2);n<0&&(n+=360),n>360&&(n-=360),t[e].properties.heading=n}},Mt._createRotationPoint=function(t,r,o,n,a,c){var l=lt(o,n).geometry.coordinates,s=rt(a,l),u=at(a,c*ct(a,l),s,{}).geometry.coordinates;t.push({type:e.FEATURE,properties:{meta:i.MIDPOINT,icon:"rotate",parent:r,lng:u[0],lat:u[1],coord_path:o.properties.coord_path,heading:s},geometry:{type:e.POINT,coordinates:u}})},Mt.createRotationPoints=function(t,r,o){const{type:n,coordinates:i}=r.geometry,a=r.properties&&r.properties.id;let c=[];if(n!==e.POINT&&n!==e.MULTI_POINT){var l=o.slice(0);l[l.length]=l[0];var s=null,u=this.computeRotationCenter(t,r);return t.singleRotationPoint?this._createRotationPoint(c,a,l[0],l[1],u,t.rotationPointRadius):l.forEach((e=>{null!=s&&this._createRotationPoint(c,a,s,e,u,t.rotationPointRadius),s=e})),c}},Mt.startDragging=function(t,e){this.map.dragPan.disable(),t.canDragMove=!0,t.dragMoveLocation=e.lngLat},Mt.stopDragging=function(t){this.map.dragPan.enable(),t.dragMoving=!1,t.canDragMove=!1,t.dragMoveLocation=null};const It=f(i.MIDPOINT),Ot=f(i.VERTEX);Mt.onTouchStart=Mt.onMouseDown=function(t,e){return Ot(e)?this.onVertex(t,e):It(e)?this.onRotatePoint(t,e):p(e)?this.onFeature(t,e):void 0};const xt=1,Nt=2;Mt.onVertex=function(t,e){this.computeAxes(t,t.feature.toGeoJSON()),this.startDragging(t,e);const r=e.featureTarget.properties;t.selectedCoordPaths=[r.coord_path],t.txMode=xt},Mt.onRotatePoint=function(t,e){this.computeAxes(t,t.feature.toGeoJSON()),this.startDragging(t,e);const r=e.featureTarget.properties;t.selectedCoordPaths=[r.coord_path],t.txMode=Nt},Mt.onFeature=function(t,e){t.selectedCoordPaths=[],this.startDragging(t,e)},Mt.coordinateIndex=function(t){if(t.length>=1){var e=t[0].split(".");return parseInt(e[e.length-1])}return 0},Mt.computeRotationCenter=function(t,e){return it(e)},Mt.computeAxes=function(t,r){const o=this.computeRotationCenter(t,r);let n;if(r.geometry.type===e.POLYGON)n=r.geometry.coordinates[0].slice(0);else if(r.geometry.type===e.MULTI_POLYGON){let t=[];r.geometry.coordinates.forEach((e=>{e.forEach((e=>{e.forEach((e=>{t.push(e)}))}))})),n=t}else if(r.geometry.type===e.LINE_STRING)n=r.geometry.coordinates;else if(r.geometry.type===e.MULTI_LINE_STRING){let t=[];r.geometry.coordinates.forEach((e=>{e.forEach((e=>{t.push(e)}))})),n=t}const i=n.length-1,a=Math.floor(i/2);for(var c=[],l=[],s=0;s<i;s++){var u=s-1;u<0&&(u+=i);const e=n[u],r=n[s],d=lt(V(e),V(r));var f=o;if(Pt.Opposite===t.rotatePivot){var p=(s+a)%i;(y=p-1)<0&&(y+=i);const t=n[y],e=n[p];f=lt(V(t),V(e))}c[s]=f.geometry.coordinates,l[s]=rt(f,d)}t.rotation={feature0:r,centers:c,headings:l};for(var d=[],h=[],g=0;g<i;g++){var y,b=n[g],m=o.geometry.coordinates;if(Pt.Opposite===t.scaleCenter)m=n[y=(g+a)%i];d[g]=m,h[g]=ct(V(m),V(b),{units:"meters"})}t.scaling={feature0:r,centers:d,distances:h}},Mt.onDrag=function(t,e){if(!0!==t.canDragMove)return;t.dragMoving=!0,e.originalEvent.stopPropagation();const r={lng:e.lngLat.lng-t.dragMoveLocation.lng,lat:e.lngLat.lat-t.dragMoveLocation.lat};if(t.selectedCoordPaths.length>0&&t.txMode)switch(t.txMode){case Nt:this.dragRotatePoint(t,e,r);break;case xt:this.dragScalePoint(t,e,r)}else this.dragFeature(t,e,r);t.dragMoveLocation=e.lngLat},Mt.dragRotatePoint=function(t,e,r){if(void 0===t.rotation||null==t.rotation)throw new Error("state.rotation required");t.feature.toGeoJSON();var o=V([e.lngLat.lng,e.lngLat.lat]);const n=t.rotation.centers.length;var i=(this.coordinateIndex(t.selectedCoordPaths)+1)%n,a=V(t.rotation.centers[i]),c=rt(a,o)-t.rotation.headings[i];d(e)&&(c=5*Math.round(c/5));var l=function(t,e,r){if(!K(r=r||{}))throw new Error("options is invalid");var o=r.pivot,n=r.mutate;if(!t)throw new Error("geojson is required");if(null==e||isNaN(e))throw new Error("angle is required");return 0===e||(o||(o=st(t)),!1!==n&&void 0!==n||(t=ht(t)),ot(t,(function(t){var r=ut(o,t)+e,n=pt(o,t),i=tt(dt(o,n,r));t[0]=i[0],t[1]=i[1]}))),t}(t.rotation.feature0,c,{pivot:a,mutate:!1});t.feature.incomingCoords(l.geometry.coordinates),this.fireUpdate()},Mt.dragScalePoint=function(t,e,r){if(void 0===t.scaling||null==t.scaling)throw new Error("state.scaling required");t.feature.toGeoJSON();var o=this.coordinateIndex(t.selectedCoordPaths),n=t.scaling.centers[o],i=ct(V(n),V([e.lngLat.lng,e.lngLat.lat]),{units:"meters"})/t.scaling.distances[o];d(e)&&(i=.05*Math.round(i/.05));var a=vt(t.scaling.feature0,i,{origin:n,mutate:!1});t.feature.incomingCoords(a.geometry.coordinates),this.fireUpdate()},Mt.dragFeature=function(t,e,r){G(this.getSelected(),r),t.dragMoveLocation=e.lngLat,this.fireUpdate()},Mt.fireUpdate=function(){this.map.fire(o.UPDATE,{action:n.CHANGE_COORDINATES,features:this.getSelected().map((t=>t.toGeoJSON()))})},Mt.onMouseOut=function(t){t.dragMoving&&this.fireUpdate()},Mt.onTouchEnd=Mt.onMouseUp=function(t){t.dragMoving&&this.fireUpdate(),this.stopDragging(t)},Mt.clickActiveFeature=function(t){t.selectedCoordPaths=[],this.clearSelectedCoordinates(),t.feature.changed()},Mt.onClick=function(t,e){return function(t){return void 0===t.featureTarget}(e)?this.clickNoTarget(t,e):p(e)?this.clickActiveFeature(t,e):function(t){return!!t.featureTarget&&!!t.featureTarget.properties&&t.featureTarget.properties.active===a.INACTIVE&&t.featureTarget.properties.meta===i.FEATURE}(e)?this.clickInactive(t,e):void this.stopDragging(t)},Mt.clickNoTarget=function(t,e){t.canSelectFeatures&&this.changeMode(r.SIMPLE_SELECT)},Mt.clickInactive=function(t,e){t.canSelectFeatures&&this.changeMode(r.SIMPLE_SELECT,{featureIds:[e.featureTarget.properties.id]})},Mt.onTrash=function(){this.deleteFeature(this.getSelectedIds())},t.SRCenter=Pt,t.SRMode=Mt,t.SRStyle=[{id:"gl-draw-polygon-fill-inactive",type:"fill",filter:["all",["==","active","false"],["==","$type","Polygon"],["!=","user_type","overlay"],["!=","mode","static"]],paint:{"fill-color":"#3bb2d0","fill-outline-color":"#3bb2d0","fill-opacity":.2}},{id:"gl-draw-polygon-fill-active",type:"fill",filter:["all",["==","active","true"],["==","$type","Polygon"],["!=","user_type","overlay"]],paint:{"fill-color":"#fbb03b","fill-outline-color":"#fbb03b","fill-opacity":.2}},{id:"gl-draw-overlay-polygon-fill-inactive",type:"fill",filter:["all",["==","active","false"],["==","$type","Polygon"],["==","user_type","overlay"],["!=","mode","static"]],paint:{"fill-color":"#3bb2d0","fill-outline-color":"#3bb2d0","fill-opacity":.01}},{id:"gl-draw-overlay-polygon-fill-active",type:"fill",filter:["all",["==","active","true"],["==","$type","Polygon"],["==","user_type","overlay"]],paint:{"fill-color":"#fbb03b","fill-outline-color":"#fbb03b","fill-opacity":.01}},{id:"gl-draw-polygon-stroke-inactive",type:"line",filter:["all",["==","active","false"],["==","$type","Polygon"],["!=","user_type","overlay"],["!=","mode","static"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#3bb2d0","line-width":2}},{id:"gl-draw-polygon-stroke-active",type:"line",filter:["all",["==","active","true"],["==","$type","Polygon"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fbb03b","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-polygon-midpoint",type:"circle",filter:["all",["==","$type","Point"],["==","meta","midpoint"]],paint:{"circle-radius":3,"circle-color":"#fbb03b"}},{id:"gl-draw-line-inactive",type:"line",filter:["all",["==","active","false"],["==","$type","LineString"],["!=","mode","static"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#3bb2d0","line-width":2}},{id:"gl-draw-line-active",type:"line",filter:["all",["==","$type","LineString"],["==","active","true"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fbb03b","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-polygon-and-line-vertex-stroke-inactive",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["!=","mode","static"]],paint:{"circle-radius":4,"circle-color":"#fff"}},{id:"gl-draw-polygon-and-line-vertex-inactive",type:"circle",filter:["all",["==","meta","vertex"],["==","$type","Point"],["!=","mode","static"]],paint:{"circle-radius":2,"circle-color":"#fbb03b"}},{id:"gl-draw-polygon-and-line-vertex-scale-icon",type:"symbol",filter:["all",["==","meta","vertex"],["==","$type","Point"],["!=","mode","static"],["has","heading"]],layout:{"icon-image":"scale","icon-allow-overlap":!0,"icon-ignore-placement":!0,"icon-rotation-alignment":"map","icon-rotate":["get","heading"]},paint:{"icon-opacity":1,"icon-opacity-transition":{delay:0,duration:0}}},{id:"gl-draw-point-point-stroke-inactive",type:"circle",filter:["all",["==","active","false"],["==","$type","Point"],["==","meta","feature"],["!=","mode","static"]],paint:{"circle-radius":5,"circle-opacity":1,"circle-color":"#fff"}},{id:"gl-draw-point-inactive",type:"circle",filter:["all",["==","active","false"],["==","$type","Point"],["==","meta","feature"],["!=","mode","static"]],paint:{"circle-radius":3,"circle-color":"#3bb2d0"}},{id:"gl-draw-point-stroke-active",type:"circle",filter:["all",["==","$type","Point"],["==","active","true"],["!=","meta","midpoint"]],paint:{"circle-radius":4,"circle-color":"#fff"}},{id:"gl-draw-point-active",type:"circle",filter:["all",["==","$type","Point"],["!=","meta","midpoint"],["==","active","true"]],paint:{"circle-radius":2,"circle-color":"#fbb03b"}},{id:"gl-draw-polygon-fill-static",type:"fill",filter:["all",["==","mode","static"],["==","$type","Polygon"]],paint:{"fill-color":"#404040","fill-outline-color":"#404040","fill-opacity":.1}},{id:"gl-draw-polygon-stroke-static",type:"line",filter:["all",["==","mode","static"],["==","$type","Polygon"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#404040","line-width":2}},{id:"gl-draw-line-static",type:"line",filter:["all",["==","mode","static"],["==","$type","LineString"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#404040","line-width":2}},{id:"gl-draw-point-static",type:"circle",filter:["all",["==","mode","static"],["==","$type","Point"]],paint:{"circle-radius":5,"circle-color":"#404040"}},{id:"gl-draw-line-rotate-point",type:"line",filter:["all",["==","meta","midpoint"],["==","icon","rotate"],["==","$type","LineString"],["!=","mode","static"]],layout:{"line-cap":"round","line-join":"round"},paint:{"line-color":"#fbb03b","line-dasharray":[.2,2],"line-width":2}},{id:"gl-draw-polygon-rotate-point-stroke",type:"circle",filter:["all",["==","meta","midpoint"],["==","icon","rotate"],["==","$type","Point"],["!=","mode","static"]],paint:{"circle-radius":4,"circle-color":"#fff"}},{id:"gl-draw-polygon-rotate-point",type:"circle",filter:["all",["==","meta","midpoint"],["==","icon","rotate"],["==","$type","Point"],["!=","mode","static"]],paint:{"circle-radius":2,"circle-color":"#fbb03b"}},{id:"gl-draw-polygon-rotate-point-icon",type:"symbol",filter:["all",["==","meta","midpoint"],["==","icon","rotate"],["==","$type","Point"],["!=","mode","static"]],layout:{"icon-image":"rotate","icon-allow-overlap":!0,"icon-ignore-placement":!0,"icon-rotation-alignment":"map","icon-rotate":["get","heading"]},paint:{"icon-opacity":1,"icon-opacity-transition":{delay:0,duration:0}}}],Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=index.js.map
